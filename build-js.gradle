
kotlin {
    js {
        compilations.main {
            kotlinOptions {
                sourceMap = true
                metaInfo = true
                moduleKind = "umd"
            }
        }
        compilations.test {
            kotlinOptions {
                sourceMap = true
                metaInfo = true
                moduleKind = "commonjs"
            }
        }
    }

    sourceSets {
        jsMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-js"
            }
        }

        jsTest {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-test-js"
            }
        }
    }
}

node {
    version = "13.6.0"
    download = true
    nodeModulesDir = file("$buildDir/npm")
}

task installMocha(type: NpmTask) {
    args = ["install", "mocha@6.0.0"]
}

def jsCompilations = kotlin.targets.js.compilations

task populateNodeModules {
    doLast {
        copy {
            from "$buildDir/npm/node_modules"
            from jsCompilations.main.output.allOutputs
            jsCompilations.test.runtimeDependencyFiles.each {
                if (it.exists() && !it.isDirectory()) {
                    from zipTree(it.absolutePath).matching { include '*.js' }
                }
            }
            into "$buildDir/node_modules"
        }
    }
}

task runMocha(type: NodeTask, dependsOn: [compileTestKotlinJs, installMocha, populateNodeModules]) {
    script = file("$buildDir/npm/node_modules/.bin/mocha")
    args = [
        "--timeout", "15000",
        relativePath(jsCompilations.test.output.allOutputs.first()) + "/${project.name}_test.js"
    ]
}

jsTest {
    dependsOn runMocha
}
